{"version":3,"sources":["webpack:///webpack/bootstrap 4c89a87d686adeab384e","webpack:///./src/js/upload-song.js"],"names":["console","log","view","el","$","template","find","selector","render","data","append","show","removeClass","hide","addClass","model","controller","init","bindEventHub","initQiniu","uploader","Qiniu","disable_statistics_report","runtimes","browse_button","uptoken_url","get_new_uptoken","domain","max_file_size","dragdrop","drop_element","auto_start","up","files","plupload","each","file","window","eventHub","emit","info","getOption","res","JSON","parse","response","sourceLink","encodeURIComponent","key","songData","name","hash","url","err","errTip","on"],"mappings":"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","file":"uploadSong.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c89a87d686adeab384e","console.log('upload song');\r\n\r\n{\r\n    let view = {\r\n        el: $('.upload-song'),\r\n        template:`\r\n            <h3>上传歌曲</h3>\r\n            <div id=\"upload-song-area\">\r\n                拖曳歌曲到此处或点击 \"选择文件\" 上传歌曲\r\n            </div>\r\n            <div class=\"upload-button-wrapper\">\r\n                <span id=\"upload-button\">选择文件</span>\r\n            </div>\r\n        `,\r\n        find(selector){\r\n            return this.el.find(selector)[0]\r\n        },\r\n        render(data){\r\n            this.el.append(this.template)\r\n        },\r\n        show(){\r\n            $(this.el).removeClass('hide')\r\n        },\r\n        hide(){\r\n            $(this.el).addClass('hide')\r\n        }\r\n    }\r\n    let model = {}\r\n    let controller = {\r\n        init(view, data){\r\n            this.view = view\r\n            this.model = model\r\n            this.view.render()\r\n            this.bindEventHub()\r\n        },\r\n        //初始化七牛上传歌曲功能\r\n        initQiniu(){\r\n            var uploader = Qiniu.uploader({\r\n                disable_statistics_report: false,   // 禁止自动发送上传统计信息到七牛，默认允许发送\r\n                runtimes: 'html5',      // 上传模式,依次退化\r\n                browse_button: this.view.find('#upload-button'),         // 上传选择的点选按钮，**必需**\r\n                // 在初始化时，uptoken, uptoken_url, uptoken_func 三个参数中必须有一个被设置\r\n                // 切如果提供了多个，其优先级为 uptoken > uptoken_url > uptoken_func\r\n                // 其中 uptoken 是直接提供上传凭证，uptoken_url 是提供了获取上传凭证的地址，如果需要定制获取 uptoken 的过程则可以设置 uptoken_func\r\n                // uptoken : '<Your upload token>', // uptoken 是上传凭证，由其他程序生成\r\n                uptoken_url: 'http://localhost:8888/uptoken',         // Ajax 请求 uptoken 的 Url，**强烈建议设置**（服务端提供）\r\n                // uptoken_func: function(file){    // 在需要获取 uptoken 时，该方法会被调用\r\n                //    // do something\r\n                //    return uptoken;\r\n                // },\r\n                get_new_uptoken: false,             // 设置上传文件的时候是否每次都重新获取新的 uptoken\r\n                // downtoken_url: '/downtoken',\r\n                // Ajax请求downToken的Url，私有空间时使用,JS-SDK 将向该地址POST文件的key和domain,服务端返回的JSON必须包含`url`字段，`url`值为该文件的下载地址\r\n                // unique_names: true,              // 默认 false，key 为文件名。若开启该选项，JS-SDK 会为每个文件自动生成key（文件名）\r\n                // save_key: true,                  // 默认 false。若在服务端生成 uptoken 的上传策略中指定了 `save_key`，则开启，SDK在前端将不对key进行任何处理\r\n                domain: 'pfk6bv9od.bkt.clouddn.com',     // bucket 域名，下载资源时用到，如：'http://xxx.bkt.clouddn.com/' **必需**\r\n                //pfk6bv9od.bkt.clouddn.com\r\n                max_file_size: '40mb',             // 最大文件体积限制\r\n                dragdrop: true,                     // 开启可拖曳上传\r\n                drop_element: this.view.find('#upload-song-area'),          // 拖曳上传区域元素的 ID，拖曳文件或文件夹后可触发上传\r\n                auto_start: true,                   // 选择文件后自动上传，若关闭需要自己绑定事件触发上传,\r\n                //x_vars : {\r\n                //    自定义变量，参考http://developer.qiniu.com/docs/v6/api/overview/up/response/vars.html\r\n                //    'time' : function(up,file) {\r\n                //        var time = (new Date()).getTime();\r\n                // do something with 'time'\r\n                //        return time;\r\n                //    },\r\n                //    'size' : function(up,file) {\r\n                //        var size = file.size;\r\n                // do something with 'size'\r\n                //        return size;\r\n                //    }\r\n                //},\r\n                init: {\r\n                    'FilesAdded': function(up, files) {\r\n                        plupload.each(files, function(file) {\r\n                            // 文件添加进队列后,处理相关的事情\r\n                        });\r\n                    },\r\n                    'BeforeUpload': function(up, file) {\r\n                        // 每个文件上传前,处理相关的事情\r\n                        window.eventHub.emit('beforeUpload')\r\n                    },\r\n                    'UploadProgress': function(up, file) {\r\n\r\n                    },\r\n                    'FileUploaded': function(up, file, info) {\r\n                        // 每个文件上传成功后,处理相关的事情\r\n                        // 其中 info.response 是文件上传成功后，服务端返回的json，形式如\r\n                        // {\r\n                        //    \"hash\": \"Fh8xVqod2MQ1mocfI4S4KpRL6D98\",\r\n                        //    \"key\": \"gogopher.jpg\"\r\n                        //  }\r\n                        // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html\r\n                        window.eventHub.emit('afterUpload')\r\n                        var domain = up.getOption('domain');\r\n                        var res = JSON.parse(info.response);\r\n                        var sourceLink = 'http://' +  domain + '/' + encodeURIComponent(res.key); //获取上传成功后的文件的Url\r\n                        console.log(sourceLink);\r\n                        var response = JSON.parse(info.response)\r\n                        var songData = {\r\n                            name: response.key,\r\n                            hash: response.hash,\r\n                            url: sourceLink\r\n                        }\r\n                        console.log('upload eventHub前打印的数据');\r\n                        window.eventHub.emit('upload', songData)\r\n                    },\r\n                    'Error': function(up, err, errTip) {\r\n                        //上传出错时,处理相关的事情\r\n                    },\r\n                    'UploadComplete': function() {\r\n                        //队列文件处理完毕后,处理相关的事情\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        bindEventHub(){\r\n            window.eventHub.on('new', ()=>{\r\n                this.view.show()\r\n            })\r\n            window.eventHub.on('upload', ()=>{\r\n                this.view.hide()\r\n            })\r\n            window.eventHub.on('select', ()=>{\r\n                this.view.hide()\r\n            })\r\n            window.eventHub.on('update', ()=>{\r\n                this.view.show()\r\n            })\r\n            window.eventHub.on('save', ()=>{\r\n                this.view.show()\r\n            })\r\n        }\r\n\r\n    }\r\n    controller.init(view,model)\r\n    controller.initQiniu()\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/upload-song.js"],"sourceRoot":""}